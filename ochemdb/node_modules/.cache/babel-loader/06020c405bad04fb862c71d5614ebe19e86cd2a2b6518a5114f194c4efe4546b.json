{"ast":null,"code":"import React,{useEffect,useState,useRef}from\"react\";import\"./SearchBar.css\";import{useCart}from\"./CartContext\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SearchBar(_ref){let{onSearch}=_ref;const{cart,addToCart}=useCart();const[query,SetQuery]=useState(\"\");// State for the input value\nconst[suggestions,setSuggestions]=useState([]);// State for suggestions list\nconst[selectedChemical,setSelectedChemical]=useState(\"\");// Track the selected chemical\nconst[addedChemicals,setAddedChemicals]=useState(new Set());// Track added chemicals\nconst[preventFetch,setPreventFetch]=useState(false);// Flag to prevent fetching\nconst suggestionsRef=useRef(null);// Ref to handle click outside\n// Fetch suggestions from the backend when query changes\nuseEffect(()=>{if(preventFetch){console.log(\"Preventing fetch due to suggestion click\");setPreventFetch(false);// Reset the flag for future queries\nreturn;// Exit early\n}console.log(\"Query changed, fetching suggestions:\",query);if(query.length>1){fetch(`http://127.0.0.1:5000/chemical/suggestions/${query}`).then(response=>response.json()).then(data=>{console.log(\"Fetched data:\",data);setSuggestions(Array.isArray(data)?data:[]);}).catch(error=>{console.error(\"Error fetching suggestions:\",error);});}else{setSuggestions([]);// Clear suggestions for short queries\n}},[query]);// Hide suggestions when clicking outside the component\nuseEffect(()=>{const handleClickOutside=event=>{if(suggestionsRef.current&&!suggestionsRef.current.contains(event.target)){console.log(\"Clicked outside, clearing suggestions\");setSuggestions([]);// Hide suggestions\n}};document.addEventListener(\"click\",handleClickOutside);return()=>{document.removeEventListener(\"click\",handleClickOutside);};},[]);const handleSearch=()=>{if(selectedChemical){onSearch(selectedChemical);// Trigger search for selected chemical\n}else{onSearch(query);// Trigger search for typed query\n}setSuggestions([]);// Clear suggestions\n};const handleSuggestionClick=chemical=>{console.log(\"Clicked suggestion, clearing suggestions:\",chemical.name);setPreventFetch(true);setSelectedChemical(chemical.name);SetQuery(chemical.name);setSuggestions([]);// Clear suggestions\nconsole.log(\"Suggestions cleared after click\");onSearch(chemical.name);};const handleAddToCart=async chemical=>{try{console.log(\"Fetching details for chemical:\",chemical.name);// Fetch full chemical details from the backend\nconst response=await fetch(`http://127.0.0.1:5000/chemical/${encodeURIComponent(chemical.name)}`);if(!response.ok){throw new Error(\"Failed to fetch chemical details\");}const fullDetails=await response.json();console.log(\"Full chemical details fetched:\",fullDetails);// Prepare the chemical with full properties\nconst chemicalWithProperties={name:fullDetails.name||\"N/A\",molecular_weight:fullDetails.molWeight||fullDetails.molecular_weight||\"N/A\",// Correct key\ndensity:fullDetails.Density||fullDetails.density||\"N/A\",// Correct key\nmelting_boiling_point:`${fullDetails.meltingPoint||\"N/A\"} / ${fullDetails.boilingPoint||\"N/A\"}`,// Combine melting/boiling\nhazards:fullDetails.Safety||[]// Combine array of hazards\n};// Add the full details to the cart\nconsole.log(\"Passing to addToCart:\",chemicalWithProperties);addToCart(chemicalWithProperties);setAddedChemicals(prev=>new Set(prev).add(chemical.name));// Mark the chemical as added\n}catch(error){console.error(\"Error adding chemical to cart:\",error);}};const handleKeyDown=event=>{if(event.key===\"Enter\"){handleSearch();// Trigger search on Enter\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"search-bar-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:selectedChemical||query// Show selected chemical or query\n,onChange:e=>{SetQuery(e.target.value);// Update query when typing\nsetSelectedChemical(\"\");// Clear selected chemical when typing\n},onKeyDown:handleKeyDown// Handle Enter key\n,placeholder:\"Search for Chemical\"}),suggestions.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"suggestions-list\",ref:suggestionsRef,children:suggestions.map((chemical,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{onClick:()=>handleSuggestionClick(chemical),children:chemical.name}),addedChemicals.has(chemical.name)?/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\",children:\"\\u2714\"})// Show checkmark if already added\n:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAddToCart(chemical)// Add to cart\n,className:\"add-to-cart-button\",children:\"Add to Cart\"})]},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,className:\"search-button\",children:\"Search\"})]});}export default SearchBar;","map":{"version":3,"names":["React","useEffect","useState","useRef","useCart","jsx","_jsx","jsxs","_jsxs","SearchBar","_ref","onSearch","cart","addToCart","query","SetQuery","suggestions","setSuggestions","selectedChemical","setSelectedChemical","addedChemicals","setAddedChemicals","Set","preventFetch","setPreventFetch","suggestionsRef","console","log","length","fetch","then","response","json","data","Array","isArray","catch","error","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleSearch","handleSuggestionClick","chemical","name","handleAddToCart","encodeURIComponent","ok","Error","fullDetails","chemicalWithProperties","molecular_weight","molWeight","density","Density","melting_boiling_point","meltingPoint","boilingPoint","hazards","Safety","prev","add","handleKeyDown","key","className","children","type","value","onChange","e","onKeyDown","placeholder","ref","map","index","onClick","has"],"sources":["/Users/aadi/Desktop/Ochem Database Backend/ochemdb/src/SearchBar.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"./SearchBar.css\";\nimport { useCart } from \"./CartContext\";\n\nfunction SearchBar({ onSearch }) {\n  const { cart, addToCart } = useCart();\n  const [query, SetQuery] = useState(\"\"); // State for the input value\n  const [suggestions, setSuggestions] = useState([]); // State for suggestions list\n  const [selectedChemical, setSelectedChemical] = useState(\"\"); // Track the selected chemical\n  const [addedChemicals, setAddedChemicals] = useState(new Set()); // Track added chemicals\n  const [preventFetch, setPreventFetch] = useState(false); // Flag to prevent fetching\n  const suggestionsRef = useRef(null); // Ref to handle click outside\n\n  // Fetch suggestions from the backend when query changes\n  useEffect(() => {\n    if (preventFetch) {\n      console.log(\"Preventing fetch due to suggestion click\");\n      setPreventFetch(false); // Reset the flag for future queries\n      return; // Exit early\n    }\n\n    console.log(\"Query changed, fetching suggestions:\", query);\n    if (query.length > 1) {\n      fetch(`http://127.0.0.1:5000/chemical/suggestions/${query}`)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Fetched data:\", data);\n          setSuggestions(Array.isArray(data) ? data : []);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching suggestions:\", error);\n        });\n    } else {\n      setSuggestions([]); // Clear suggestions for short queries\n    }\n  }, [query]);\n\n  // Hide suggestions when clicking outside the component\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (\n        suggestionsRef.current &&\n        !suggestionsRef.current.contains(event.target)\n      ) {\n        console.log(\"Clicked outside, clearing suggestions\");\n        setSuggestions([]); // Hide suggestions\n      }\n    };\n\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n\n  const handleSearch = () => {\n    if (selectedChemical) {\n      onSearch(selectedChemical); // Trigger search for selected chemical\n    } else {\n      onSearch(query); // Trigger search for typed query\n    }\n    setSuggestions([]); // Clear suggestions\n  };\n\n  const handleSuggestionClick = (chemical) => {\n    console.log(\"Clicked suggestion, clearing suggestions:\", chemical.name);\n    setPreventFetch(true);\n    setSelectedChemical(chemical.name);\n    SetQuery(chemical.name);\n    setSuggestions([]); // Clear suggestions\n    console.log(\"Suggestions cleared after click\");\n    onSearch(chemical.name);\n  };\n\n  const handleAddToCart = async (chemical) => {\n    try {\n      console.log(\"Fetching details for chemical:\", chemical.name);\n\n      // Fetch full chemical details from the backend\n      const response = await fetch(\n        `http://127.0.0.1:5000/chemical/${encodeURIComponent(chemical.name)}`\n      );\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch chemical details\");\n      }\n\n      const fullDetails = await response.json();\n      console.log(\"Full chemical details fetched:\", fullDetails);\n\n      // Prepare the chemical with full properties\n      const chemicalWithProperties = {\n        name: fullDetails.name || \"N/A\",\n        molecular_weight:\n          fullDetails.molWeight || fullDetails.molecular_weight || \"N/A\", // Correct key\n        density: fullDetails.Density || fullDetails.density || \"N/A\", // Correct key\n        melting_boiling_point: `${fullDetails.meltingPoint || \"N/A\"} / ${\n          fullDetails.boilingPoint || \"N/A\"\n        }`, // Combine melting/boiling\n        hazards: fullDetails.Safety || [], // Combine array of hazards\n      };\n\n      // Add the full details to the cart\n      console.log(\"Passing to addToCart:\", chemicalWithProperties);\n      addToCart(chemicalWithProperties);\n      setAddedChemicals((prev) => new Set(prev).add(chemical.name)); // Mark the chemical as added\n    } catch (error) {\n      console.error(\"Error adding chemical to cart:\", error);\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      handleSearch(); // Trigger search on Enter\n    }\n  };\n\n  return (\n    <div className=\"search-bar-container\">\n      <input\n        type=\"text\"\n        value={selectedChemical || query} // Show selected chemical or query\n        onChange={(e) => {\n          SetQuery(e.target.value); // Update query when typing\n          setSelectedChemical(\"\"); // Clear selected chemical when typing\n        }}\n        onKeyDown={handleKeyDown} // Handle Enter key\n        placeholder=\"Search for Chemical\"\n      />\n      {suggestions.length > 0 && (\n        <ul className=\"suggestions-list\" ref={suggestionsRef}>\n          {suggestions.map((chemical, index) => (\n            <li key={index}>\n              <span onClick={() => handleSuggestionClick(chemical)}>\n                {chemical.name}\n              </span>\n              {addedChemicals.has(chemical.name) ? (\n                <span className=\"checkmark\">✔</span> // Show checkmark if already added\n              ) : (\n                <button\n                  onClick={() => handleAddToCart(chemical)} // Add to cart\n                  className=\"add-to-cart-button\"\n                >\n                  Add to Cart\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n      <button onClick={handleSearch} className=\"search-button\">\n        Search\n      </button>\n    </div>\n  );\n}\n\nexport default SearchBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}