{"ast":null,"code":"var _jsxFileName = \"/Users/aadi/Desktop/Ochem Database Backend/ochemdb/src/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n  const [popupMessage, setPopupMessage] = useState(null); // State for popup message\n  const [showPopup, setShowPopup] = useState(false); // State to control visibility\n\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    console.log(\"Cart updated:\", cart);\n  }, [cart]);\n  const addToCart = chemical => {\n    console.log(\"Adding to cart:\", chemical); // Debug log\n\n    // Ensure the chemical object has all necessary fields\n    const requiredFields = [\"name\", \"molecular_weight\", \"density\", \"melting_boiling_point\", \"hazards\"];\n    const missingFields = requiredFields.filter(field => !chemical[field]);\n    if (missingFields.length > 0) {\n      console.error(\"Cannot add to cart. Missing fields:\", missingFields);\n      return; // Exit early if the chemical is incomplete\n    }\n\n    // Only add to cart if not already present\n    if (cart.find(item => item.name === chemical.name)) {\n      setPopupMessage(`${chemical.name} is already in the cart!`);\n      setShowPopup(true); // Show popup\n    } else {\n      setCart(prevCart => [...prevCart, chemical]);\n      setPopupMessage(`${chemical.name} has been added to the cart!`);\n      setShowPopup(true); // Show popup\n    }\n    setTimeout(() => {\n      setShowPopup(false);\n    }, 4000);\n  };\n  const removeFromCart = name => {\n    setCart(cart.filter(item => item.name !== name));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart\n    },\n    children: [children, showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-message\",\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"B+KpqRdKkCnVwQFjl9GEIXoFf2s=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","savedCart","localStorage","getItem","JSON","parse","popupMessage","setPopupMessage","showPopup","setShowPopup","setItem","stringify","console","log","addToCart","chemical","requiredFields","missingFields","filter","field","length","error","find","item","name","prevCart","setTimeout","removeFromCart","Provider","value","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aadi/Desktop/Ochem Database Backend/ochemdb/src/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\n\nconst CartContext = createContext();\n\nexport const useCart = () => {\n  return useContext(CartContext);\n};\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n\n  const [popupMessage, setPopupMessage] = useState(null); // State for popup message\n  const [showPopup, setShowPopup] = useState(false); // State to control visibility\n\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    console.log(\"Cart updated:\", cart);\n  }, [cart]);\n\n  const addToCart = (chemical) => {\n    console.log(\"Adding to cart:\", chemical); // Debug log\n\n    // Ensure the chemical object has all necessary fields\n    const requiredFields = [\n      \"name\",\n      \"molecular_weight\",\n      \"density\",\n      \"melting_boiling_point\",\n      \"hazards\",\n    ];\n    const missingFields = requiredFields.filter((field) => !chemical[field]);\n\n    if (missingFields.length > 0) {\n      console.error(\"Cannot add to cart. Missing fields:\", missingFields);\n      return; // Exit early if the chemical is incomplete\n    }\n\n    // Only add to cart if not already present\n    if (cart.find((item) => item.name === chemical.name)) {\n      setPopupMessage(`${chemical.name} is already in the cart!`);\n      setShowPopup(true); // Show popup\n    } else {\n      setCart((prevCart) => [...prevCart, chemical]);\n      setPopupMessage(`${chemical.name} has been added to the cart!`);\n      setShowPopup(true); // Show popup\n    }\n    setTimeout(() => {\n      setShowPopup(false);\n    }, 4000);\n  };\n\n  const removeFromCart = (name) => {\n    setCart(cart.filter((item) => item.name !== name));\n  };\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart }}>\n      {children}\n      {/* Popup message */}\n      {showPopup && <div className=\"popup-message\">{popupMessage}</div>}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}