{"ast":null,"code":"var _jsxFileName = \"/Users/aadi/Desktop/Ochem Database Backend/ochemdb/src/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./SearchBar.css\";\nimport { useCart } from \"./CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar({\n  onSearch\n}) {\n  _s();\n  const {\n    cart,\n    addToCart\n  } = useCart();\n  const [query, SetQuery] = useState(\"\"); // State for the input value\n  const [suggestions, setSuggestions] = useState([]); // State for suggestions list\n  const [selectedChemical, setSelectedChemical] = useState(\"\"); // Track the selected chemical\n  const [addedChemicals, setAddedChemicals] = useState(new Set()); // Track added chemicals\n  const [preventFetch, setPreventFetch] = useState(false); // Flag to prevent fetching\n  const suggestionsRef = useRef(null); // Ref to handle click outside\n\n  // Fetch suggestions from the backend when query changes\n  useEffect(() => {\n    console.log(\"Query changed, fetching suggestions:\", query);\n    if (query.length > 1) {\n      fetch(`http://127.0.0.1:5000/chemical/suggestions/${query}`).then(response => response.json()).then(data => {\n        console.log(\"Fetched data:\", data);\n        setSuggestions(Array.isArray(data) ? data : []);\n      }).catch(error => {\n        console.error(\"Error fetching suggestions:\", error);\n      });\n    } else {\n      setSuggestions([]); // Clear suggestions for short queries\n    }\n  }, [query]);\n\n  // Hide suggestions when clicking outside the component\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (suggestionsRef.current && !suggestionsRef.current.contains(event.target)) {\n        console.log(\"Clicked outside, clearing suggestions\");\n        setSuggestions([]); // Hide suggestions\n      }\n    };\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n  const handleSearch = () => {\n    if (selectedChemical) {\n      onSearch(selectedChemical); // Trigger search for selected chemical\n    } else {\n      onSearch(query); // Trigger search for typed query\n    }\n    setSuggestions([]); // Clear suggestions\n  };\n  const handleSuggestionClick = chemical => {\n    console.log(\"Clicked suggestion, clearing suggestions:\", chemical.name);\n    setPreventFetch(true);\n    setSelectedChemical(chemical.name);\n    SetQuery(chemical.name);\n    setSuggestions([]); // Clear suggestions\n    console.log(\"Suggestions cleared after click\");\n    onSearch(chemical.name);\n  };\n  const handleAddToCart = async chemical => {\n    try {\n      console.log(\"Fetching details for chemical:\", chemical.name);\n\n      // Fetch full chemical details from the backend\n      const response = await fetch(`http://127.0.0.1:5000/chemical/${encodeURIComponent(chemical.name)}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch chemical details\");\n      }\n      const fullDetails = await response.json();\n      console.log(\"Full chemical details fetched:\", fullDetails);\n\n      // Prepare the chemical with full properties\n      const chemicalWithProperties = {\n        name: fullDetails.name || \"N/A\",\n        molecular_weight: fullDetails.molWeight || fullDetails.molecular_weight || \"N/A\",\n        // Correct key\n        density: fullDetails.Density || fullDetails.density || \"N/A\",\n        // Correct key\n        melting_boiling_point: `${fullDetails.meltingPoint || \"N/A\"} / ${fullDetails.boilingPoint || \"N/A\"}`,\n        // Combine melting/boiling\n        hazards: fullDetails.Safety || [] // Combine array of hazards\n      };\n\n      // Add the full details to the cart\n      console.log(\"Passing to addToCart:\", chemicalWithProperties);\n      addToCart(chemicalWithProperties);\n      setAddedChemicals(prev => new Set(prev).add(chemical.name)); // Mark the chemical as added\n    } catch (error) {\n      console.error(\"Error adding chemical to cart:\", error);\n    }\n  };\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      handleSearch(); // Trigger search on Enter\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: selectedChemical || query // Show selected chemical or query\n      ,\n      onChange: e => {\n        SetQuery(e.target.value); // Update query when typing\n        setSelectedChemical(\"\"); // Clear selected chemical when typing\n      },\n      onKeyDown: handleKeyDown // Handle Enter key\n      ,\n      placeholder: \"Search for Chemical\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"suggestions-list\",\n      ref: suggestionsRef,\n      children: suggestions.map((chemical, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleSuggestionClick(chemical),\n          children: chemical.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), addedChemicals.has(chemical.name) ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"checkmark\",\n          children: \"\\u2714\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this) // Show checkmark if already added\n        : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddToCart(chemical) // Add to cart\n          ,\n          className: \"add-to-cart-button\",\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      className: \"search-button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"2BC5d3qjniOXlvvJiSov07QdaUY=\", false, function () {\n  return [useCart];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCart","jsxDEV","_jsxDEV","SearchBar","onSearch","_s","cart","addToCart","query","SetQuery","suggestions","setSuggestions","selectedChemical","setSelectedChemical","addedChemicals","setAddedChemicals","Set","preventFetch","setPreventFetch","suggestionsRef","console","log","length","fetch","then","response","json","data","Array","isArray","catch","error","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleSearch","handleSuggestionClick","chemical","name","handleAddToCart","encodeURIComponent","ok","Error","fullDetails","chemicalWithProperties","molecular_weight","molWeight","density","Density","melting_boiling_point","meltingPoint","boilingPoint","hazards","Safety","prev","add","handleKeyDown","key","className","children","type","value","onChange","e","onKeyDown","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","index","onClick","has","_c","$RefreshReg$"],"sources":["/Users/aadi/Desktop/Ochem Database Backend/ochemdb/src/SearchBar.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"./SearchBar.css\";\nimport { useCart } from \"./CartContext\";\n\nfunction SearchBar({ onSearch }) {\n  const { cart, addToCart } = useCart();\n  const [query, SetQuery] = useState(\"\"); // State for the input value\n  const [suggestions, setSuggestions] = useState([]); // State for suggestions list\n  const [selectedChemical, setSelectedChemical] = useState(\"\"); // Track the selected chemical\n  const [addedChemicals, setAddedChemicals] = useState(new Set()); // Track added chemicals\n  const [preventFetch, setPreventFetch] = useState(false); // Flag to prevent fetching\n  const suggestionsRef = useRef(null); // Ref to handle click outside\n\n  // Fetch suggestions from the backend when query changes\n  useEffect(() => {\n    console.log(\"Query changed, fetching suggestions:\", query);\n    if (query.length > 1) {\n      fetch(`http://127.0.0.1:5000/chemical/suggestions/${query}`)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Fetched data:\", data);\n          setSuggestions(Array.isArray(data) ? data : []);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching suggestions:\", error);\n        });\n    } else {\n      setSuggestions([]); // Clear suggestions for short queries\n    }\n  }, [query]);\n\n  // Hide suggestions when clicking outside the component\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (\n        suggestionsRef.current &&\n        !suggestionsRef.current.contains(event.target)\n      ) {\n        console.log(\"Clicked outside, clearing suggestions\");\n        setSuggestions([]); // Hide suggestions\n      }\n    };\n\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n\n  const handleSearch = () => {\n    if (selectedChemical) {\n      onSearch(selectedChemical); // Trigger search for selected chemical\n    } else {\n      onSearch(query); // Trigger search for typed query\n    }\n    setSuggestions([]); // Clear suggestions\n  };\n\n  const handleSuggestionClick = (chemical) => {\n    console.log(\"Clicked suggestion, clearing suggestions:\", chemical.name);\n    setPreventFetch(true);\n    setSelectedChemical(chemical.name);\n    SetQuery(chemical.name);\n    setSuggestions([]); // Clear suggestions\n    console.log(\"Suggestions cleared after click\");\n    onSearch(chemical.name);\n  };\n\n  const handleAddToCart = async (chemical) => {\n    try {\n      console.log(\"Fetching details for chemical:\", chemical.name);\n\n      // Fetch full chemical details from the backend\n      const response = await fetch(\n        `http://127.0.0.1:5000/chemical/${encodeURIComponent(chemical.name)}`\n      );\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch chemical details\");\n      }\n\n      const fullDetails = await response.json();\n      console.log(\"Full chemical details fetched:\", fullDetails);\n\n      // Prepare the chemical with full properties\n      const chemicalWithProperties = {\n        name: fullDetails.name || \"N/A\",\n        molecular_weight:\n          fullDetails.molWeight || fullDetails.molecular_weight || \"N/A\", // Correct key\n        density: fullDetails.Density || fullDetails.density || \"N/A\", // Correct key\n        melting_boiling_point: `${fullDetails.meltingPoint || \"N/A\"} / ${\n          fullDetails.boilingPoint || \"N/A\"\n        }`, // Combine melting/boiling\n        hazards: fullDetails.Safety || [], // Combine array of hazards\n      };\n\n      // Add the full details to the cart\n      console.log(\"Passing to addToCart:\", chemicalWithProperties);\n      addToCart(chemicalWithProperties);\n      setAddedChemicals((prev) => new Set(prev).add(chemical.name)); // Mark the chemical as added\n    } catch (error) {\n      console.error(\"Error adding chemical to cart:\", error);\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      handleSearch(); // Trigger search on Enter\n    }\n  };\n\n  return (\n    <div className=\"search-bar-container\">\n      <input\n        type=\"text\"\n        value={selectedChemical || query} // Show selected chemical or query\n        onChange={(e) => {\n          SetQuery(e.target.value); // Update query when typing\n          setSelectedChemical(\"\"); // Clear selected chemical when typing\n        }}\n        onKeyDown={handleKeyDown} // Handle Enter key\n        placeholder=\"Search for Chemical\"\n      />\n      {suggestions.length > 0 && (\n        <ul className=\"suggestions-list\" ref={suggestionsRef}>\n          {suggestions.map((chemical, index) => (\n            <li key={index}>\n              <span onClick={() => handleSuggestionClick(chemical)}>\n                {chemical.name}\n              </span>\n              {addedChemicals.has(chemical.name) ? (\n                <span className=\"checkmark\">✔</span> // Show checkmark if already added\n              ) : (\n                <button\n                  onClick={() => handleAddToCart(chemical)} // Add to cart\n                  className=\"add-to-cart-button\"\n                >\n                  Add to Cart\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n      <button onClick={handleSearch} className=\"search-button\">\n        Search\n      </button>\n    </div>\n  );\n}\n\nexport default SearchBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}