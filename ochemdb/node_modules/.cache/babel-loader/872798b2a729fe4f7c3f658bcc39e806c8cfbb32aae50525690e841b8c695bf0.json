{"ast":null,"code":"var _jsxFileName = \"/Users/aadi/Desktop/Ochem Database Backend/ochemdb/src/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    console.log(\"Cart updated:\", cart);\n  }, [cart]);\n  const addToCart = chemical => {\n    console.log(\"Adding to cart:\", chemical.molecular_weight); // Debug log\n\n    // Ensure the chemical object has all necessary fields\n    const requiredFields = [\"name\", \"molecular_weight\", \"density\", \"melting_boiling_point\", \"hazards\"];\n    const missingFields = requiredFields.filter(field => !chemical[field]);\n    if (missingFields.length > 0) {\n      console.error(\"Cannot add to cart. Missing fields:\", missingFields);\n      return; // Exit early if the chemical is incomplete\n    }\n\n    // Only add to cart if not already present\n    if (!cart.find(item => item.name === chemical.name)) {\n      setCart(prevCart => [...prevCart, chemical]);\n    }\n  };\n  const removeFromCart = name => {\n    setCart(cart.filter(item => item.name !== name));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"LgMLlJ8i6ABehna6zzSfNxJuNUg=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","console","log","addToCart","chemical","molecular_weight","requiredFields","missingFields","filter","field","length","error","find","item","name","prevCart","removeFromCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aadi/Desktop/Ochem Database Backend/ochemdb/src/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\n\nconst CartContext = createContext();\n\nexport const useCart = () => {\n  return useContext(CartContext);\n};\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    console.log(\"Cart updated:\", cart);\n  }, [cart]);\n\n  const addToCart = (chemical) => {\n    console.log(\"Adding to cart:\", chemical.molecular_weight); // Debug log\n\n    // Ensure the chemical object has all necessary fields\n    const requiredFields = [\n      \"name\",\n      \"molecular_weight\",\n      \"density\",\n      \"melting_boiling_point\",\n      \"hazards\",\n    ];\n    const missingFields = requiredFields.filter((field) => !chemical[field]);\n\n    if (missingFields.length > 0) {\n      console.error(\"Cannot add to cart. Missing fields:\", missingFields);\n      return; // Exit early if the chemical is incomplete\n    }\n\n    // Only add to cart if not already present\n    if (!cart.find((item) => item.name === chemical.name)) {\n      setCart((prevCart) => [...prevCart, chemical]);\n    }\n  };\n\n  const removeFromCart = (name) => {\n    setCart(cart.filter((item) => item.name !== name));\n  };\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOP,UAAU,CAACK,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACrC,MAAMW,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,EAAE;EAC/C,CAAC,CAAC;EAEFZ,SAAS,CAAC,MAAM;IACda,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACR,IAAI,CAAC,CAAC;IAClDS,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEV,IAAI,CAAC;EACpC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMW,SAAS,GAAIC,QAAQ,IAAK;IAC9BH,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEE,QAAQ,CAACC,gBAAgB,CAAC,CAAC,CAAC;;IAE3D;IACA,MAAMC,cAAc,GAAG,CACrB,MAAM,EACN,kBAAkB,EAClB,SAAS,EACT,uBAAuB,EACvB,SAAS,CACV;IACD,MAAMC,aAAa,GAAGD,cAAc,CAACE,MAAM,CAAEC,KAAK,IAAK,CAACL,QAAQ,CAACK,KAAK,CAAC,CAAC;IAExE,IAAIF,aAAa,CAACG,MAAM,GAAG,CAAC,EAAE;MAC5BT,OAAO,CAACU,KAAK,CAAC,qCAAqC,EAAEJ,aAAa,CAAC;MACnE,OAAO,CAAC;IACV;;IAEA;IACA,IAAI,CAACf,IAAI,CAACoB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAKV,QAAQ,CAACU,IAAI,CAAC,EAAE;MACrDrB,OAAO,CAAEsB,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEX,QAAQ,CAAC,CAAC;IAChD;EACF,CAAC;EAED,MAAMY,cAAc,GAAIF,IAAI,IAAK;IAC/BrB,OAAO,CAACD,IAAI,CAACgB,MAAM,CAAEK,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAKA,IAAI,CAAC,CAAC;EACpD,CAAC;EAED,oBACE7B,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,IAAI;MAAEW,SAAS;MAAEa;IAAe,CAAE;IAAA1B,QAAA,EAC9DA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,GAAA,CA5CWF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}