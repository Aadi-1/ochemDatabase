{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();export const useCart=()=>{return useContext(CartContext);};export const CartProvider=_ref=>{let{children}=_ref;const[cart,setCart]=useState(()=>{const savedCart=localStorage.getItem(\"cart\");return savedCart?JSON.parse(savedCart):[];});const[popupMessage,setPopupMessage]=useState(null);// State for popup message\nconst[showPopup,setShowPopup]=useState(false);// State to control visibility\nconst[popupType,setPopupType]=useState(null);useEffect(()=>{localStorage.setItem(\"cart\",JSON.stringify(cart));console.log(\"Cart updated:\",cart);},[cart]);const addToCart=chemical=>{console.log(\"Adding to cart:\",chemical);// Debug log\n// Ensure the chemical object has all necessary fields\nconst requiredFields=[\"name\",\"molecular_weight\",\"density\",\"melting_boiling_point\",\"hazards\"];const missingFields=requiredFields.filter(field=>!chemical[field]);if(missingFields.length>0){console.error(\"Cannot add to cart. Missing fields:\",missingFields);return;// Exit early if the chemical is incomplete\n}// Only add to cart if not already present\nif(cart.find(item=>item.name===chemical.name)){setPopupMessage(`${chemical.name} is already in the cart!`);setPopupType(\"info\");setShowPopup(true);// Show popup\n}else{setCart(prevCart=>[...prevCart,chemical]);setPopupMessage(`${chemical.name} has been added to the cart!`);setPopupType(\"add\");setShowPopup(true);// Show popup\n}setTimeout(()=>{setShowPopup(false);},4000);};const removeFromCart=name=>{setCart(cart.filter(item=>item.name!==name));setPopupMessage(`${name} has been removed from the cart`);setPopupType(\"remove\");setShowPopup(true);setTimeout(()=>{setShowPopup(false);},4000);};return/*#__PURE__*/_jsxs(CartContext.Provider,{value:{cart,addToCart,removeFromCart},children:[children,showPopup&&/*#__PURE__*/_jsx(\"div\",{className:\"popup-message\",style:{backgroundColor:popupType===\"add\"?\"#4caf50\"// Green for adding to cart\n:popupType===\"remove\"?\"#f44336\"// Red for removing from cart\n:\"#2196f3\"// Blue for \"already in cart\"\n},children:popupMessage})]});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsx","_jsx","jsxs","_jsxs","CartContext","useCart","CartProvider","_ref","children","cart","setCart","savedCart","localStorage","getItem","JSON","parse","popupMessage","setPopupMessage","showPopup","setShowPopup","popupType","setPopupType","setItem","stringify","console","log","addToCart","chemical","requiredFields","missingFields","filter","field","length","error","find","item","name","prevCart","setTimeout","removeFromCart","Provider","value","className","style","backgroundColor"],"sources":["/Users/aadi/Desktop/Ochem Database Backend/ochemdb/src/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\n\nconst CartContext = createContext();\n\nexport const useCart = () => {\n  return useContext(CartContext);\n};\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n\n  const [popupMessage, setPopupMessage] = useState(null); // State for popup message\n  const [showPopup, setShowPopup] = useState(false); // State to control visibility\n  const [popupType, setPopupType] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    console.log(\"Cart updated:\", cart);\n  }, [cart]);\n\n  const addToCart = (chemical) => {\n    console.log(\"Adding to cart:\", chemical); // Debug log\n\n    // Ensure the chemical object has all necessary fields\n    const requiredFields = [\n      \"name\",\n      \"molecular_weight\",\n      \"density\",\n      \"melting_boiling_point\",\n      \"hazards\",\n    ];\n    const missingFields = requiredFields.filter((field) => !chemical[field]);\n\n    if (missingFields.length > 0) {\n      console.error(\"Cannot add to cart. Missing fields:\", missingFields);\n      return; // Exit early if the chemical is incomplete\n    }\n\n    // Only add to cart if not already present\n    if (cart.find((item) => item.name === chemical.name)) {\n      setPopupMessage(`${chemical.name} is already in the cart!`);\n      setPopupType(\"info\");\n      setShowPopup(true); // Show popup\n    } else {\n      setCart((prevCart) => [...prevCart, chemical]);\n      setPopupMessage(`${chemical.name} has been added to the cart!`);\n      setPopupType(\"add\");\n      setShowPopup(true); // Show popup\n    }\n    setTimeout(() => {\n      setShowPopup(false);\n    }, 4000);\n  };\n\n  const removeFromCart = (name) => {\n    setCart(cart.filter((item) => item.name !== name));\n    setPopupMessage(`${name} has been removed from the cart`);\n    setPopupType(\"remove\");\n    setShowPopup(true);\n\n    setTimeout(() => {\n      setShowPopup(false);\n    }, 4000);\n  };\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart }}>\n      {children}\n\n      {/* Popup message */}\n      {showPopup && (\n        <div\n          className=\"popup-message\"\n          style={{\n            backgroundColor:\n              popupType === \"add\"\n                ? \"#4caf50\" // Green for adding to cart\n                : popupType === \"remove\"\n                ? \"#f44336\" // Red for removing from cart\n                : \"#2196f3\", // Blue for \"already in cart\"\n          }}\n        >\n          {popupMessage}\n        </div>\n      )}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}